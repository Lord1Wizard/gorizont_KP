# Generated by Django 4.2 on 2023-05-27 12:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='Died')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(help_text='Enter a brief description of the book', max_length=1000)),
                ('isbn', models.CharField(help_text='13 Character <a href="https://www.isbn-international.org/content/what-isbn">ISBN number</a>', max_length=13, verbose_name='ISBN')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.author')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a book genre (e.g. Science Fiction, French Poetry etc.)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LedDisplayModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название модуля', max_length=200)),
                ('manufacturer', models.CharField(help_text='Производитель', max_length=200)),
                ('operationEnvironment', models.CharField(blank=True, choices=[('i', 'Indoor'), ('o', 'Outdoor'), ('f', 'Flexible')], default='i', help_text='Рабочая среда', max_length=10)),
                ('pixelPitch', models.FloatField(help_text='Шаг пикселя')),
                ('width', models.IntegerField(help_text='Ширина модуля в мм.')),
                ('height', models.IntegerField(help_text='Высота модуля в мм.')),
                ('depth', models.FloatField(help_text='Глубина модуля в мм.')),
                ('horizontalViewingAngle', models.IntegerField(help_text='Горизонтальный угол обзора')),
                ('verticalViewingAngle', models.IntegerField(help_text='Вертикальный угол обзора')),
                ('bestViewingDistance', models.IntegerField(help_text='Лучшее расстояние для просмотра в м')),
                ('ledLamp', models.CharField(blank=True, help_text='Тип светодиода', max_length=20)),
                ('refreshFrequency', models.IntegerField(help_text='Частота обновления')),
                ('brightness', models.IntegerField(help_text='Яркость cd/㎡')),
                ('drivingMethod', models.CharField(blank=True, help_text='Режим сканирования', max_length=10)),
                ('lifeSpan', models.IntegerField(help_text='Срок службы в часах')),
                ('powerConsumption', models.IntegerField(help_text='Мощность модуля в Вт.')),
            ],
            options={
                'ordering': ['pixelPitch', 'operationEnvironment'],
            },
        ),
        migrations.CreateModel(
            name='Meneger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('patronymic_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phoneNumber', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='BookInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular book across whole library', primary_key=True, serialize=False)),
                ('imprint', models.CharField(max_length=200)),
                ('due_back', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('m', 'Maintenance'), ('o', 'On loan'), ('a', 'Available'), ('r', 'Reserved')], default='m', help_text='Book availability', max_length=1)),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.book')),
            ],
            options={
                'ordering': ['due_back'],
            },
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ManyToManyField(help_text='Select a genre for this book', to='catalog.genre'),
        ),
    ]
